#!/bin/sh

set -e

# Move to top level of project.
cd `dirname $0`/..

find . -name '*.pyc' -delete

# Recreate database contents.
psql -d $DATABASE_URL -c "DROP SCHEMA IF EXISTS public CASCADE"
psql -d $DATABASE_URL -c "CREATE SCHEMA public"

# Create database user if not exists. TODO Fix (if this is needed?) Doesn't work on Heroku/Mac
#sudo -u postgres psql -c "SELECT 'exists' FROM pg_roles WHERE rolname='bluetail'" | grep -q 'exists' || sudo -u postgres psql -c "CREATE USER bluetail SUPERUSER CREATEDB PASSWORD 'bluetail'"
#psql -d $DATABASE_URL -c "SELECT 'exists' FROM pg_roles WHERE rolname='bluetail'" | grep -q 'exists' || psql -d $DATABASE_URL -c "CREATE USER bluetail SUPERUSER CREATEDB PASSWORD 'bluetail'"

# Set up database.
script/migrate

# Insert example data.
script/manage insert_prototype_data
script/manage insert_contracts_finder_data --anonymise
script/manage scan_contracts

# Create superuser.
script/console -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@example.com', 'admin')"
