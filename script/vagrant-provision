#!/bin/sh

sudo apt-get update

cd /vagrant/bluetail

#fix dpkg-preconfigure error
export DEBIAN_FRONTEND=noninteractive

# Install the packages from conf/packages
xargs sudo apt-get install -qq -y < conf/packages
xargs sudo apt-get install -qq -y < conf/dev_packages
# Install some of the other things we need that are just for dev
sudo apt-get install -qq -y ruby-dev libsqlite3-dev build-essential

# Create postgres database and user.
sudo -u postgres psql -c "CREATE DATABASE bluetail"
sudo -u postgres psql -c "CREATE USER bluetail SUPERUSER CREATEDB PASSWORD 'bluetail'"

# pyenv setup
if [ ! -f "/home/vagrant/.pyenv/bin/pyenv"]; then
  curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash;
fi

if ! grep "pyenv init" /home/vagrant/.bashrc; then
    echo '
export PATH="/home/vagrant/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
' >> /home/vagrant/.bashrc
fi

/home/vagrant/.bashrc

pyenv install 3.6.10
pyenv global 3.6.10
## pipenv setup
#if [ ! -f "/home/vagrant/.local/bin/pipenv"]; then
pip install pipenv
#fi


if ! grep '$PATH:/$HOME/.local/bin' /home/vagrant/.bashrc; then
    echo '
export PATH="$PATH:/$HOME/.local/bin"
' >> /home/vagrant/.bashrc
fi

## Set up Python packages in a virtualenv
#script/bootstrap

# Give permissions to vagrant user on all the packages
sudo chmod -R ugo+rwx /vagrant/venv

if ! grep "SECRET_KEY=" /home/vagrant/.bashrc ; then
    echo "export SECRET_KEY=\"$SECRET_KEY\"" >> /home/vagrant/.bashrc
fi

if ! grep "DATABASE_URL=" /home/vagrant/.bashrc ; then
    echo "export DATABASE_URL=\"$DATABASE_URL\"" >> /home/vagrant/.bashrc
fi

# Run migrations, insert example data, etc.
#script/setup
